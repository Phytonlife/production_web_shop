services:
  - type: web
    name: backend
    env: python
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
    startCommand: gunicorn core.wsgi:application
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: WEB_CONCURRENCY
        value: 4

  - type: worker
    name: celery-worker
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A core worker -l info
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: SECRET_KEY
        fromService:
          type: web
          name: backend
          envVarKey: SECRET_KEY

  - type: worker
    name: celery-beat
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: SECRET_KEY
        fromService:
          type: web
          name: backend
          envVarKey: SECRET_KEY

databases:
  - name: db
    databaseName: your_db_name
    user: your_db_user

redis:
  - name: redis
    plan: free
