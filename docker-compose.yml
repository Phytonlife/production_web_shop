version: '3.8'

services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432" # Только для локальной отладки, в продакшене не нужно

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379" # Только для локальной отладки, в продакшене не нужно

  backend:
    build: .
    volumes:
      - .:/app # Монтируем код для удобства разработки
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    command: /app/entrypoint.sh # Запускаем скрипт entrypoint

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/vol/web/static
      - media_volume:/vol/web/media
    depends_on:
      - backend

  celery_worker:
    build: .
    command: celery -A core worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - db
      - backend

  celery_beat:
    build: .
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - db
      - backend

  

volumes:
  postgres_data:
  static_volume:
  media_volume:
